// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: intercept.proto
// Protobuf C++ Version: 5.27.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_intercept_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_intercept_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/timestamp.pb.h"
#include "google/protobuf/empty.pb.h"
#include "supervise.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_intercept_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_intercept_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_intercept_2eproto;
namespace rpc {
class Event;
struct EventDefaultTypeInternal;
extern EventDefaultTypeInternal _Event_default_instance_;
class Event_Signalled;
struct Event_SignalledDefaultTypeInternal;
extern Event_SignalledDefaultTypeInternal _Event_Signalled_default_instance_;
class Event_Started;
struct Event_StartedDefaultTypeInternal;
extern Event_StartedDefaultTypeInternal _Event_Started_default_instance_;
class Event_Terminated;
struct Event_TerminatedDefaultTypeInternal;
extern Event_TerminatedDefaultTypeInternal _Event_Terminated_default_instance_;
}  // namespace rpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace rpc {

// ===================================================================


// -------------------------------------------------------------------

class Event_Terminated final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rpc.Event.Terminated) */ {
 public:
  inline Event_Terminated() : Event_Terminated(nullptr) {}
  ~Event_Terminated() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Event_Terminated(
      ::google::protobuf::internal::ConstantInitialized);

  inline Event_Terminated(const Event_Terminated& from) : Event_Terminated(nullptr, from) {}
  inline Event_Terminated(Event_Terminated&& from) noexcept
      : Event_Terminated(nullptr, std::move(from)) {}
  inline Event_Terminated& operator=(const Event_Terminated& from) {
    CopyFrom(from);
    return *this;
  }
  inline Event_Terminated& operator=(Event_Terminated&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Event_Terminated& default_instance() {
    return *internal_default_instance();
  }
  static inline const Event_Terminated* internal_default_instance() {
    return reinterpret_cast<const Event_Terminated*>(
        &_Event_Terminated_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Event_Terminated& a, Event_Terminated& b) { a.Swap(&b); }
  inline void Swap(Event_Terminated* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Event_Terminated* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Event_Terminated* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Event_Terminated>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Event_Terminated& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Event_Terminated& from) { Event_Terminated::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Event_Terminated* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "rpc.Event.Terminated"; }

 protected:
  explicit Event_Terminated(::google::protobuf::Arena* arena);
  Event_Terminated(::google::protobuf::Arena* arena, const Event_Terminated& from);
  Event_Terminated(::google::protobuf::Arena* arena, Event_Terminated&& from) noexcept
      : Event_Terminated(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatusFieldNumber = 1,
  };
  // int64 status = 1;
  void clear_status() ;
  ::int64_t status() const;
  void set_status(::int64_t value);

  private:
  ::int64_t _internal_status() const;
  void _internal_set_status(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:rpc.Event.Terminated)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Event_Terminated_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Event_Terminated& from_msg);
    ::int64_t status_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_intercept_2eproto;
};
// -------------------------------------------------------------------

class Event_Signalled final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rpc.Event.Signalled) */ {
 public:
  inline Event_Signalled() : Event_Signalled(nullptr) {}
  ~Event_Signalled() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Event_Signalled(
      ::google::protobuf::internal::ConstantInitialized);

  inline Event_Signalled(const Event_Signalled& from) : Event_Signalled(nullptr, from) {}
  inline Event_Signalled(Event_Signalled&& from) noexcept
      : Event_Signalled(nullptr, std::move(from)) {}
  inline Event_Signalled& operator=(const Event_Signalled& from) {
    CopyFrom(from);
    return *this;
  }
  inline Event_Signalled& operator=(Event_Signalled&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Event_Signalled& default_instance() {
    return *internal_default_instance();
  }
  static inline const Event_Signalled* internal_default_instance() {
    return reinterpret_cast<const Event_Signalled*>(
        &_Event_Signalled_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Event_Signalled& a, Event_Signalled& b) { a.Swap(&b); }
  inline void Swap(Event_Signalled* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Event_Signalled* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Event_Signalled* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Event_Signalled>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Event_Signalled& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Event_Signalled& from) { Event_Signalled::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Event_Signalled* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "rpc.Event.Signalled"; }

 protected:
  explicit Event_Signalled(::google::protobuf::Arena* arena);
  Event_Signalled(::google::protobuf::Arena* arena, const Event_Signalled& from);
  Event_Signalled(::google::protobuf::Arena* arena, Event_Signalled&& from) noexcept
      : Event_Signalled(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNumberFieldNumber = 1,
  };
  // int32 number = 1;
  void clear_number() ;
  ::int32_t number() const;
  void set_number(::int32_t value);

  private:
  ::int32_t _internal_number() const;
  void _internal_set_number(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:rpc.Event.Signalled)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Event_Signalled_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Event_Signalled& from_msg);
    ::int32_t number_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_intercept_2eproto;
};
// -------------------------------------------------------------------

class Event_Started final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rpc.Event.Started) */ {
 public:
  inline Event_Started() : Event_Started(nullptr) {}
  ~Event_Started() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Event_Started(
      ::google::protobuf::internal::ConstantInitialized);

  inline Event_Started(const Event_Started& from) : Event_Started(nullptr, from) {}
  inline Event_Started(Event_Started&& from) noexcept
      : Event_Started(nullptr, std::move(from)) {}
  inline Event_Started& operator=(const Event_Started& from) {
    CopyFrom(from);
    return *this;
  }
  inline Event_Started& operator=(Event_Started&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Event_Started& default_instance() {
    return *internal_default_instance();
  }
  static inline const Event_Started* internal_default_instance() {
    return reinterpret_cast<const Event_Started*>(
        &_Event_Started_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Event_Started& a, Event_Started& b) { a.Swap(&b); }
  inline void Swap(Event_Started* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Event_Started* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Event_Started* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Event_Started>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Event_Started& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Event_Started& from) { Event_Started::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Event_Started* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "rpc.Event.Started"; }

 protected:
  explicit Event_Started(::google::protobuf::Arena* arena);
  Event_Started(::google::protobuf::Arena* arena, const Event_Started& from);
  Event_Started(::google::protobuf::Arena* arena, Event_Started&& from) noexcept
      : Event_Started(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExecutionFieldNumber = 1,
    kPidFieldNumber = 2,
    kPpidFieldNumber = 3,
  };
  // .rpc.Execution execution = 1;
  bool has_execution() const;
  void clear_execution() ;
  const ::rpc::Execution& execution() const;
  PROTOBUF_NODISCARD ::rpc::Execution* release_execution();
  ::rpc::Execution* mutable_execution();
  void set_allocated_execution(::rpc::Execution* value);
  void unsafe_arena_set_allocated_execution(::rpc::Execution* value);
  ::rpc::Execution* unsafe_arena_release_execution();

  private:
  const ::rpc::Execution& _internal_execution() const;
  ::rpc::Execution* _internal_mutable_execution();

  public:
  // uint32 pid = 2;
  void clear_pid() ;
  ::uint32_t pid() const;
  void set_pid(::uint32_t value);

  private:
  ::uint32_t _internal_pid() const;
  void _internal_set_pid(::uint32_t value);

  public:
  // uint32 ppid = 3;
  void clear_ppid() ;
  ::uint32_t ppid() const;
  void set_ppid(::uint32_t value);

  private:
  ::uint32_t _internal_ppid() const;
  void _internal_set_ppid(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:rpc.Event.Started)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Event_Started_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Event_Started& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::rpc::Execution* execution_;
    ::uint32_t pid_;
    ::uint32_t ppid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_intercept_2eproto;
};
// -------------------------------------------------------------------

class Event final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rpc.Event) */ {
 public:
  inline Event() : Event(nullptr) {}
  ~Event() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Event(
      ::google::protobuf::internal::ConstantInitialized);

  inline Event(const Event& from) : Event(nullptr, from) {}
  inline Event(Event&& from) noexcept
      : Event(nullptr, std::move(from)) {}
  inline Event& operator=(const Event& from) {
    CopyFrom(from);
    return *this;
  }
  inline Event& operator=(Event&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Event& default_instance() {
    return *internal_default_instance();
  }
  enum EventCase {
    kStarted = 11,
    kTerminated = 12,
    kSignalled = 13,
    EVENT_NOT_SET = 0,
  };
  static inline const Event* internal_default_instance() {
    return reinterpret_cast<const Event*>(
        &_Event_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(Event& a, Event& b) { a.Swap(&b); }
  inline void Swap(Event* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Event* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Event* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Event>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Event& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Event& from) { Event::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Event* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "rpc.Event"; }

 protected:
  explicit Event(::google::protobuf::Arena* arena);
  Event(::google::protobuf::Arena* arena, const Event& from);
  Event(::google::protobuf::Arena* arena, Event&& from) noexcept
      : Event(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Started = Event_Started;
  using Terminated = Event_Terminated;
  using Signalled = Event_Signalled;

  // accessors -------------------------------------------------------
  enum : int {
    kTimestampFieldNumber = 2,
    kRidFieldNumber = 1,
    kStartedFieldNumber = 11,
    kTerminatedFieldNumber = 12,
    kSignalledFieldNumber = 13,
  };
  // .google.protobuf.Timestamp timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp() ;
  const ::google::protobuf::Timestamp& timestamp() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_timestamp();
  ::google::protobuf::Timestamp* mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  ::google::protobuf::Timestamp* _internal_mutable_timestamp();

  public:
  // uint64 rid = 1;
  void clear_rid() ;
  ::uint64_t rid() const;
  void set_rid(::uint64_t value);

  private:
  ::uint64_t _internal_rid() const;
  void _internal_set_rid(::uint64_t value);

  public:
  // .rpc.Event.Started started = 11;
  bool has_started() const;
  private:
  bool _internal_has_started() const;

  public:
  void clear_started() ;
  const ::rpc::Event_Started& started() const;
  PROTOBUF_NODISCARD ::rpc::Event_Started* release_started();
  ::rpc::Event_Started* mutable_started();
  void set_allocated_started(::rpc::Event_Started* value);
  void unsafe_arena_set_allocated_started(::rpc::Event_Started* value);
  ::rpc::Event_Started* unsafe_arena_release_started();

  private:
  const ::rpc::Event_Started& _internal_started() const;
  ::rpc::Event_Started* _internal_mutable_started();

  public:
  // .rpc.Event.Terminated terminated = 12;
  bool has_terminated() const;
  private:
  bool _internal_has_terminated() const;

  public:
  void clear_terminated() ;
  const ::rpc::Event_Terminated& terminated() const;
  PROTOBUF_NODISCARD ::rpc::Event_Terminated* release_terminated();
  ::rpc::Event_Terminated* mutable_terminated();
  void set_allocated_terminated(::rpc::Event_Terminated* value);
  void unsafe_arena_set_allocated_terminated(::rpc::Event_Terminated* value);
  ::rpc::Event_Terminated* unsafe_arena_release_terminated();

  private:
  const ::rpc::Event_Terminated& _internal_terminated() const;
  ::rpc::Event_Terminated* _internal_mutable_terminated();

  public:
  // .rpc.Event.Signalled signalled = 13;
  bool has_signalled() const;
  private:
  bool _internal_has_signalled() const;

  public:
  void clear_signalled() ;
  const ::rpc::Event_Signalled& signalled() const;
  PROTOBUF_NODISCARD ::rpc::Event_Signalled* release_signalled();
  ::rpc::Event_Signalled* mutable_signalled();
  void set_allocated_signalled(::rpc::Event_Signalled* value);
  void unsafe_arena_set_allocated_signalled(::rpc::Event_Signalled* value);
  ::rpc::Event_Signalled* unsafe_arena_release_signalled();

  private:
  const ::rpc::Event_Signalled& _internal_signalled() const;
  ::rpc::Event_Signalled* _internal_mutable_signalled();

  public:
  void clear_event();
  EventCase event_case() const;
  // @@protoc_insertion_point(class_scope:rpc.Event)
 private:
  class _Internal;
  void set_has_started();
  void set_has_terminated();
  void set_has_signalled();
  inline bool has_event() const;
  inline void clear_has_event();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 5, 4,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Event_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Event& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Timestamp* timestamp_;
    ::uint64_t rid_;
    union EventUnion {
      constexpr EventUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::rpc::Event_Started* started_;
      ::rpc::Event_Terminated* terminated_;
      ::rpc::Event_Signalled* signalled_;
    } event_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_intercept_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Event_Started

// .rpc.Execution execution = 1;
inline bool Event_Started::has_execution() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.execution_ != nullptr);
  return value;
}
inline const ::rpc::Execution& Event_Started::_internal_execution() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rpc::Execution* p = _impl_.execution_;
  return p != nullptr ? *p : reinterpret_cast<const ::rpc::Execution&>(::rpc::_Execution_default_instance_);
}
inline const ::rpc::Execution& Event_Started::execution() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rpc.Event.Started.execution)
  return _internal_execution();
}
inline void Event_Started::unsafe_arena_set_allocated_execution(::rpc::Execution* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.execution_);
  }
  _impl_.execution_ = reinterpret_cast<::rpc::Execution*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rpc.Event.Started.execution)
}
inline ::rpc::Execution* Event_Started::release_execution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::rpc::Execution* released = _impl_.execution_;
  _impl_.execution_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::rpc::Execution* Event_Started::unsafe_arena_release_execution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rpc.Event.Started.execution)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::rpc::Execution* temp = _impl_.execution_;
  _impl_.execution_ = nullptr;
  return temp;
}
inline ::rpc::Execution* Event_Started::_internal_mutable_execution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.execution_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rpc::Execution>(GetArena());
    _impl_.execution_ = reinterpret_cast<::rpc::Execution*>(p);
  }
  return _impl_.execution_;
}
inline ::rpc::Execution* Event_Started::mutable_execution() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::rpc::Execution* _msg = _internal_mutable_execution();
  // @@protoc_insertion_point(field_mutable:rpc.Event.Started.execution)
  return _msg;
}
inline void Event_Started::set_allocated_execution(::rpc::Execution* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.execution_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.execution_ = reinterpret_cast<::rpc::Execution*>(value);
  // @@protoc_insertion_point(field_set_allocated:rpc.Event.Started.execution)
}

// uint32 pid = 2;
inline void Event_Started::clear_pid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pid_ = 0u;
}
inline ::uint32_t Event_Started::pid() const {
  // @@protoc_insertion_point(field_get:rpc.Event.Started.pid)
  return _internal_pid();
}
inline void Event_Started::set_pid(::uint32_t value) {
  _internal_set_pid(value);
  // @@protoc_insertion_point(field_set:rpc.Event.Started.pid)
}
inline ::uint32_t Event_Started::_internal_pid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pid_;
}
inline void Event_Started::_internal_set_pid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pid_ = value;
}

// uint32 ppid = 3;
inline void Event_Started::clear_ppid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ppid_ = 0u;
}
inline ::uint32_t Event_Started::ppid() const {
  // @@protoc_insertion_point(field_get:rpc.Event.Started.ppid)
  return _internal_ppid();
}
inline void Event_Started::set_ppid(::uint32_t value) {
  _internal_set_ppid(value);
  // @@protoc_insertion_point(field_set:rpc.Event.Started.ppid)
}
inline ::uint32_t Event_Started::_internal_ppid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ppid_;
}
inline void Event_Started::_internal_set_ppid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ppid_ = value;
}

// -------------------------------------------------------------------

// Event_Terminated

// int64 status = 1;
inline void Event_Terminated::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = ::int64_t{0};
}
inline ::int64_t Event_Terminated::status() const {
  // @@protoc_insertion_point(field_get:rpc.Event.Terminated.status)
  return _internal_status();
}
inline void Event_Terminated::set_status(::int64_t value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:rpc.Event.Terminated.status)
}
inline ::int64_t Event_Terminated::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_;
}
inline void Event_Terminated::_internal_set_status(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// -------------------------------------------------------------------

// Event_Signalled

// int32 number = 1;
inline void Event_Signalled::clear_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.number_ = 0;
}
inline ::int32_t Event_Signalled::number() const {
  // @@protoc_insertion_point(field_get:rpc.Event.Signalled.number)
  return _internal_number();
}
inline void Event_Signalled::set_number(::int32_t value) {
  _internal_set_number(value);
  // @@protoc_insertion_point(field_set:rpc.Event.Signalled.number)
}
inline ::int32_t Event_Signalled::_internal_number() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.number_;
}
inline void Event_Signalled::_internal_set_number(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.number_ = value;
}

// -------------------------------------------------------------------

// Event

// uint64 rid = 1;
inline void Event::clear_rid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rid_ = ::uint64_t{0u};
}
inline ::uint64_t Event::rid() const {
  // @@protoc_insertion_point(field_get:rpc.Event.rid)
  return _internal_rid();
}
inline void Event::set_rid(::uint64_t value) {
  _internal_set_rid(value);
  // @@protoc_insertion_point(field_set:rpc.Event.rid)
}
inline ::uint64_t Event::_internal_rid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rid_;
}
inline void Event::_internal_set_rid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rid_ = value;
}

// .google.protobuf.Timestamp timestamp = 2;
inline bool Event::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Event::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Event::timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rpc.Event.timestamp)
  return _internal_timestamp();
}
inline void Event::unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rpc.Event.timestamp)
}
inline ::google::protobuf::Timestamp* Event::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* Event::unsafe_arena_release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rpc.Event.timestamp)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Event::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.timestamp_;
}
inline ::google::protobuf::Timestamp* Event::mutable_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:rpc.Event.timestamp)
  return _msg;
}
inline void Event::set_allocated_timestamp(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:rpc.Event.timestamp)
}

// .rpc.Event.Started started = 11;
inline bool Event::has_started() const {
  return event_case() == kStarted;
}
inline bool Event::_internal_has_started() const {
  return event_case() == kStarted;
}
inline void Event::set_has_started() {
  _impl_._oneof_case_[0] = kStarted;
}
inline void Event::clear_started() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (event_case() == kStarted) {
    if (GetArena() == nullptr) {
      delete _impl_.event_.started_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.event_.started_);
    }
    clear_has_event();
  }
}
inline ::rpc::Event_Started* Event::release_started() {
  // @@protoc_insertion_point(field_release:rpc.Event.started)
  if (event_case() == kStarted) {
    clear_has_event();
    auto* temp = _impl_.event_.started_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.event_.started_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::rpc::Event_Started& Event::_internal_started() const {
  return event_case() == kStarted ? *_impl_.event_.started_ : reinterpret_cast<::rpc::Event_Started&>(::rpc::_Event_Started_default_instance_);
}
inline const ::rpc::Event_Started& Event::started() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rpc.Event.started)
  return _internal_started();
}
inline ::rpc::Event_Started* Event::unsafe_arena_release_started() {
  // @@protoc_insertion_point(field_unsafe_arena_release:rpc.Event.started)
  if (event_case() == kStarted) {
    clear_has_event();
    auto* temp = _impl_.event_.started_;
    _impl_.event_.started_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Event::unsafe_arena_set_allocated_started(::rpc::Event_Started* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_event();
  if (value) {
    set_has_started();
    _impl_.event_.started_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rpc.Event.started)
}
inline ::rpc::Event_Started* Event::_internal_mutable_started() {
  if (event_case() != kStarted) {
    clear_event();
    set_has_started();
    _impl_.event_.started_ =
        ::google::protobuf::Message::DefaultConstruct<::rpc::Event_Started>(GetArena());
  }
  return _impl_.event_.started_;
}
inline ::rpc::Event_Started* Event::mutable_started() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::rpc::Event_Started* _msg = _internal_mutable_started();
  // @@protoc_insertion_point(field_mutable:rpc.Event.started)
  return _msg;
}

// .rpc.Event.Terminated terminated = 12;
inline bool Event::has_terminated() const {
  return event_case() == kTerminated;
}
inline bool Event::_internal_has_terminated() const {
  return event_case() == kTerminated;
}
inline void Event::set_has_terminated() {
  _impl_._oneof_case_[0] = kTerminated;
}
inline void Event::clear_terminated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (event_case() == kTerminated) {
    if (GetArena() == nullptr) {
      delete _impl_.event_.terminated_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.event_.terminated_);
    }
    clear_has_event();
  }
}
inline ::rpc::Event_Terminated* Event::release_terminated() {
  // @@protoc_insertion_point(field_release:rpc.Event.terminated)
  if (event_case() == kTerminated) {
    clear_has_event();
    auto* temp = _impl_.event_.terminated_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.event_.terminated_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::rpc::Event_Terminated& Event::_internal_terminated() const {
  return event_case() == kTerminated ? *_impl_.event_.terminated_ : reinterpret_cast<::rpc::Event_Terminated&>(::rpc::_Event_Terminated_default_instance_);
}
inline const ::rpc::Event_Terminated& Event::terminated() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rpc.Event.terminated)
  return _internal_terminated();
}
inline ::rpc::Event_Terminated* Event::unsafe_arena_release_terminated() {
  // @@protoc_insertion_point(field_unsafe_arena_release:rpc.Event.terminated)
  if (event_case() == kTerminated) {
    clear_has_event();
    auto* temp = _impl_.event_.terminated_;
    _impl_.event_.terminated_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Event::unsafe_arena_set_allocated_terminated(::rpc::Event_Terminated* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_event();
  if (value) {
    set_has_terminated();
    _impl_.event_.terminated_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rpc.Event.terminated)
}
inline ::rpc::Event_Terminated* Event::_internal_mutable_terminated() {
  if (event_case() != kTerminated) {
    clear_event();
    set_has_terminated();
    _impl_.event_.terminated_ =
        ::google::protobuf::Message::DefaultConstruct<::rpc::Event_Terminated>(GetArena());
  }
  return _impl_.event_.terminated_;
}
inline ::rpc::Event_Terminated* Event::mutable_terminated() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::rpc::Event_Terminated* _msg = _internal_mutable_terminated();
  // @@protoc_insertion_point(field_mutable:rpc.Event.terminated)
  return _msg;
}

// .rpc.Event.Signalled signalled = 13;
inline bool Event::has_signalled() const {
  return event_case() == kSignalled;
}
inline bool Event::_internal_has_signalled() const {
  return event_case() == kSignalled;
}
inline void Event::set_has_signalled() {
  _impl_._oneof_case_[0] = kSignalled;
}
inline void Event::clear_signalled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (event_case() == kSignalled) {
    if (GetArena() == nullptr) {
      delete _impl_.event_.signalled_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.event_.signalled_);
    }
    clear_has_event();
  }
}
inline ::rpc::Event_Signalled* Event::release_signalled() {
  // @@protoc_insertion_point(field_release:rpc.Event.signalled)
  if (event_case() == kSignalled) {
    clear_has_event();
    auto* temp = _impl_.event_.signalled_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.event_.signalled_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::rpc::Event_Signalled& Event::_internal_signalled() const {
  return event_case() == kSignalled ? *_impl_.event_.signalled_ : reinterpret_cast<::rpc::Event_Signalled&>(::rpc::_Event_Signalled_default_instance_);
}
inline const ::rpc::Event_Signalled& Event::signalled() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rpc.Event.signalled)
  return _internal_signalled();
}
inline ::rpc::Event_Signalled* Event::unsafe_arena_release_signalled() {
  // @@protoc_insertion_point(field_unsafe_arena_release:rpc.Event.signalled)
  if (event_case() == kSignalled) {
    clear_has_event();
    auto* temp = _impl_.event_.signalled_;
    _impl_.event_.signalled_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Event::unsafe_arena_set_allocated_signalled(::rpc::Event_Signalled* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_event();
  if (value) {
    set_has_signalled();
    _impl_.event_.signalled_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rpc.Event.signalled)
}
inline ::rpc::Event_Signalled* Event::_internal_mutable_signalled() {
  if (event_case() != kSignalled) {
    clear_event();
    set_has_signalled();
    _impl_.event_.signalled_ =
        ::google::protobuf::Message::DefaultConstruct<::rpc::Event_Signalled>(GetArena());
  }
  return _impl_.event_.signalled_;
}
inline ::rpc::Event_Signalled* Event::mutable_signalled() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::rpc::Event_Signalled* _msg = _internal_mutable_signalled();
  // @@protoc_insertion_point(field_mutable:rpc.Event.signalled)
  return _msg;
}

inline bool Event::has_event() const {
  return event_case() != EVENT_NOT_SET;
}
inline void Event::clear_has_event() {
  _impl_._oneof_case_[0] = EVENT_NOT_SET;
}
inline Event::EventCase Event::event_case() const {
  return Event::EventCase(_impl_._oneof_case_[0]);
}
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace rpc


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_intercept_2eproto_2epb_2eh
